In the early 1980s, a trio of books by Brian Kernighan and his colleagues taught an entire generation of programmers how to think about software design by showing them how to build the tools that they used themselves. Our goal is to repeat that success using JavaScript. How does Git actually work? How about style checkers and package managers? And exactly how does a browser decide what to render where? Each chapter will present a scaled-down but fully functional version of one tool and explain its design. Along the way, readers will meet some common design patterns, add a few things to their personal toolbox, and see how much more they can do when they start to think of software as just another kind of data.

This project builds on the success of *Beautiful Code*, which won the Jolt Award in 2007 and raised over $100,000 for Amnesty International, and *The Architecture of Open Source Applications* (http://aosabook.org), in which the creators of several dozen open source projects explained what they did and why. However, the examples in those books were written in so many different languages and described such a wide variety of systems that they weren't accessible to junior programmers looking to level up. By focusing on one domain and using one language, *Software Tools in JavaScript* will help people who understand how to program and want to learn how to think about architecture.

All material will be freely available under a Creative Commons license, and all royalties will be donated to a charity selected by the contributors. We have started outlining ideas at https://stjs.tech; if you would like to get involved, please contact Greg Wilson (gvwilson@third-bit.com).
