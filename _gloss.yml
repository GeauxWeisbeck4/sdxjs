- slug: abstract_base_class
  en:
    term: "abstract base class"
    def: >
      FIXME

- slug: base_class
  en:
    term: "base class"
    def: >
      FIXME

- slug: chain_of_responsibility_pattern
  en:
    term: "Chain of Responsibility pattern"
    def: >
      FIXME

- slug: circular_dependency
  en:
    term: "circular dependency"
    def: >
      A situation in which X depends on Y and Y depends on X, either
      directly or indirectly. If there is a circular dependency, then
      the [dependency graph](#dependency_graph) is not [acyclic](#dag).

- slug: coupling
  en:
    term: "coupling"
    def: >
      The degree of interaction between two [classes](#class),
      [modules](#module), or other software components. If a system's components
      are [loosely coupled](#loosely_coupled), changes to one are unlikely to
      affect others.  If they are [tightly coupled](#tightly_coupled), then any
      change requires other changes elsewhere, which complicates maintenance and
      evolution.

- slug: crud
  en:
    term: "Create-Read-Update-Delete"
    acronym: "CRUD"
    def: >
      FIXME

- slug: dag
  en:
    term: "directed acyclic graph"
    acronym: "DAG"
    def: >
      A [directed graph](#directed_graph) which does not contain any loops
      (i.e., it is not possible to reach a [node](#node) from itself by
      following edges).

- slug: dependency_graph
  en:
    term: "dependency graph"
    def: >
      A [directed graph](#directed_graph) showing how things depend on
      one another, such as the files to be updated by a
      [build manager](#build_manager). If the dependency graph is not
      [acyclic](#dag), the dependencies cannot be resolved.

- slug: depth_first_search
  en:
    term: "depth-first search"
    def: >
      FIXME

- slug: derived_class
  en:
    term: "derived class"
    def: >
      FIXME

- slug: directed_graph
  en:
    term: "directed graph"
    def: >
      A [graph](#graph) whose [edges](#edge) have directions.

- slug: driver
  en:
    term: "driver"
    def: >
      A program that runs other programs, or a function that "drives" all
      of the other functions in a program.

- slug: easy_mode
  en:
    term: "easy mode"
    def: >
      A term borrowed from gaming meaning to do something with obstacles or
      difficulties simplified or removed, often for practice purposes.

- slug: entry_point
  en:
    term: "entry point"
    def: >
      Where a program begins executing.

- slug: exponential_explosion
  en:
    term: "exponential explosion"
    def: >
      FIXME

- slug: greedy
  en:
    term: "greedy"
    def: >
      FIXME

- slug: iife
  en:
    term: "immediately-invoked function expression"
    acronym: "IIFE"
    def: >
      FIXME

- slug: key_binding
  en:
    term: "key binding"
    def: >
      FIXME

- slug: link
  en:
    term: "link (a program)"
    def: >
      To combine separately [compiled](#compile) modules into a single
      runnable program.

- slug: loosely_coupled
  ref:
  - tightly_coupled
  en:
    term: "loosely coupled"
    def: >
      Components in a software system are said to be loosely coupled if they are
      relatively independent of one another, i.e., if any one of them can be
      changed or replaced without others having to be altered as well.

- slug: manifest
  en:
    term: "manifest"
    def: >
      FIXME

- slug: module_bundler
  en:
    term: "module bundler"
    def: >
      A program that finds all the dependencies of a set of source files
      and combines them into a single loadable file.

- slug: patch
  en:
    term: "patch"
    def: >
      FIXME

- slug: promisification
  en:
    term: "promisification"
    def: >
      FIXME

- slug: nested_function
  en:
    term: "nested function"
    def: >
      A function that is defined inside another function.

- slug: plugin_architecture
  en:
    term: "plugin architecture"
    def: >
      A style of application design in which the main program loads and runs
      small independent modules that do the bulk of the work.

- slug: precedence
  en:
    term: "precedence"
    def: >
      The priority of an operation. For example, multiplication
      has a higher precedence than addition, so `a+b*c` is read
      as "the sum of `a` with the product of `b` and `c`".

- slug: query_selector
  en:
    term: "query selector"
    def: >
      FIXME

- slug: sha_1
  en:
    term: "SHA-1"
    def: >
      A [cryptographic hash function](#cryptographic_hash_function) that
      produces a 160-bit output for arbitrary data.  SHA-1 is no longer
      considered strong enough for cryptographic purposes, but is still
      frequently used to calculate keys for [hash tables](#hash_table).

- slug: tightly_coupled
  ref:
  - loosely_coupled
  en:
    term: "tightly coupled"
    def: >
      Components in a software system are said to be tightly coupled if they
      depend on each other's internals, so that if one is altered then others
      have to be altered as well.

- slug: token
  en:
    term: "token"
    def: >
      An indivisible unit of text for a parser, such as a variable
      name or a number. Exactly what constitutes a token depends on
      the language.

- slug: topological_order
  en:
    term: "topological order"
    def: >
      Any ordering of the [nodes](#node) in a [graph](#graph) that respects the
      direction of its [edges](#edge), i.e., if there is an edge from node A to
      node B, A comes before B in the ordering. There may be many topological
      orderings of a particular graph.

- slug: transitive_closure
  en:
    term: "transitive closure"
    def: >
      FIXME

- slug: utc
  en:
    term: "Coordinated Universal Time"
    acronym: "UTC"
    def: >
      The standard time against which all others are defined. UTC is the time
      at longitude 0Â°, and is not adjusted for daylight savings.
      [Timestamps](#timestamp) are often reported in UTC so that they will be
      the same no matter what timezone the computer is in.
