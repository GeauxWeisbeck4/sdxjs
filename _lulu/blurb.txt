The best way to learn design is to study examples, and some of the best examples of software design come from the tools programmers use in their own work. This book builds small versions of these tools to demystify them and to give some insights into how experienced programmers think.

- Using callbacks to manipulate files and directories
- Using promises to manage delayed computation
- Testing software piece by piece
- Archiving files with directory structure
- Storing and manipulating tables efficiently
- Using patterns to find things in data
- Turning text into code
- Generating HTML pages from templates
- Updating files that depend on other files
- Figuring out what goes where in a web page
- Managing source files that have been broken into pieces
- Loading source files as modules
- Checking that code conforms to style guidelines
- Modifying code to track coverage and execution times
- Generating documentation from comments embedded in code
- Turning many files into one
- Getting and installing packages
- Assembling and running low-level code
- Running programs under the control of a breakpointing debugger


All of the written material can be freely reused under the terms of the Creative Commons - Attribution license; all of the software is made available under the terms of the Hippocratic License, and all proceeds from sales of this book will go to support the Red Door Family Shelter in Toronto, Ontario.
