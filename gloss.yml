- slug: base_class
  en:
    term: "base class"
    def: >
      FIXME

- slug: chain_of_responsibility_pattern
  en:
    term: "Chain of Responsibility pattern"
    def: >
      FIXME

- slug: circular_dependency
  en:
    term: "circular dependency"
    def: >
      A situation in which X depends on Y and Y depends on X, either
      directly or indirectly. If there is a circular dependency, then
      the [dependency graph](#dependency_graph) is not [acyclic](#dag).

- slug: dag
  en:
    term: "directed acyclic graph"
    acronym: "DAG"
    def: >
      A [directed graph](#directed_graph) which does not contain any loops
      (i.e., it is not possible to reach a [node](#node) from itself by
      following edges).

- slug: dependency_graph
  en:
    term: "dependency graph"
    def: >
      A [directed graph](#directed_graph) showing how things depend on
      one another, such as the files to be updated by a
      [build manager](#build_manager). If the dependency graph is not
      [acyclic](#dag), the dependencies cannot be resolved.

- slug: depth_first_search
  en:
    term: "depth-first search"
    def: >
      FIXME

- slug: derived_class
  en:
    term: "derived class"
    def: >
      FIXME

- slug: directed_graph
  en:
    term: "directed graph"
    def: >
      A [graph](#graph) whose [edges](#edge) have directions.

- slug: entry_point
  en:
    term: "entry point"
    def: >
      Where a program begins executing.

- slug: greedy
  en:
    term: "greedy"
    def: >
      FIXME

- slug: iife
  en:
    term: "immediately-invoked function expression"
    acronym: "IIFE"
    def: >
      FIXME

- slug: link
  en:
    term: "link (a program)"
    def: >
      To combine separately [compiled](#compile) modules into a single
      runnable program.

- slug: module_bundler
  en:
    term: "module bundler"
    def: >
      A program that finds all the dependencies of a set of source files
      and combines them into a single loadable file.

- slug: promisification
  en:
    term: "promisification"
    def: >
      FIXME

- slug: nested_function
  en:
    term: "nested function"
    def: >
      A function that is defined inside another function.

- slug: plugin_architecture
  en:
    term: "plugin architecture"
    def: >
      A style of application design in which the main program loads and runs
      small independent modules that do the bulk of the work.

- slug: precedence
  en:
    term: "precedence"
    def: >
      The priority of an operation. For example, multiplication
      has a higher precedence than addition, so `a+b*c` is read
      as "the sum of `a` with the product of `b` and `c`".

- slug: query_selector
  en:
    term: "query selector"
    def: >
      FIXME

- slug: sha_1
  en:
    term: "SHA-1"
    def: >
      A [cryptographic hash function](#cryptographic_hash_function) that
      produces a 160-bit output for arbitrary data.  SHA-1 is no longer
      considered strong enough for cryptographic purposes, but is still
      frequently used to calculate keys for [hash tables](#hash_table).

- slug: token
  en:
    term: "token"
    def: >
      An indivisible unit of text for a parser, such as a variable
      name or a number. Exactly what constitutes a token depends on
      the language.

- slug: topological_order
  en:
    term: "topological order"
    def: >
      Any ordering of the [nodes](#node) in a [graph](#graph) that respects the
      direction of its [edges](#edge), i.e., if there is an edge from node A to
      node B, A comes before B in the ordering. There may be many topological
      orderings of a particular graph.

- slug: transitive_closure
  en:
    term: "transitive closure"
    def: >
      FIXME

- slug: utc
  en:
    term: "Coordinated Universal Time"
    acronym: "UTC"
    def: >
      The standard time against which all others are defined. UTC is the time
      at longitude 0Â°, and is not adjusted for daylight savings.
      [Timestamps](#timestamp) are often reported in UTC so that they will be
      the same no matter what timezone the computer is in.
