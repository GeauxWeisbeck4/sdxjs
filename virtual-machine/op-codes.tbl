| Instruction | Code | Format | Action              | Example      | Equivalent                |
| ----------- | ---- | ------ | ------------------- | ------------ | ------------------------- |
|  `hlt`      |    1 | `--`   | Halt program        | `hlt`        | `process.exit(0)`         |
|  `ldc`      |    2 | `rv`   | Load immediate      | `ldc R0 123` | `R0 := 123`               |
|  `ldr`      |    3 | `rr`   | Load register       | `ldr R0 R1`  | `R0 := RAM[R1]`           |
|  `cpy`      |    4 | `rr`   | Copy register       | `cpy R0 R1`  | `R0 := R1`                |
|  `str`      |    5 | `rr`   | Store register      | `str R0 R1`  | `RAM[R1] := R0`           |
|  `add`      |    6 | `rr`   | Add                 | `add R0 R1`  | `R0 := R0 + R1`           |
|  `sub`      |    7 | `rr`   | Subtract            | `sub R0 R1`  | `R0 := R0 - R1`           |
|  `beq`      |    8 | `rv`   | Branch if equal     | `beq R0 123` | `if (R0 === 0) PC := 123` |
|  `bne`      |    9 | `rv`   | Branch if not equal | `bne R0 123` | `if (R0 !== 0) PC := 123` |
|  `prr`      |   10 | `r-`   | Print register      | `prr R0`     | `console.log(R0)`         |
|  `prm`      |   11 | `r-`   | Print memory        | `prm R0`     | `console.log(RAM[R0])`    |
